defined_text = { ##Returns which flag strip to use for the first celduin exporter slot
	name = first_export_flag
	text = { #DOR republic
		trigger = {
			116 = {
				controller = {
					has_cosmetic_tag = DOR_republic
				}
			}
		}
		localization_key = DOR_republic_flag_strip_key
	}
	text = { #VIR
		trigger = {
			116 = {
				controller = {
					has_cosmetic_tag = VIR
				}
			}
		}
		localization_key = VIR_flag_strip_key
	}
	text = { #Celduin
		trigger = {
			116 = {
				controller = {
					has_cosmetic_tag = celduin
				}
			}
		}
		localization_key = celduin_flag_strip_key
	}
	text = { #Celduin
		trigger = {
			116 = {
				controller = {
					has_cosmetic_tag = celduin_republic
				}
			}
		}
		localization_key = celduin_republic_flag_strip_key
	}
	text = { #DOR
		trigger = {
			116 = {
				is_controlled_by = DOR
			}
		}
		localization_key = DOR_flag_strip_key
	}
}

defined_text = { ##Returns which flag frame to show on the Riavod exporter
	name = first_export_flag_frame
	text = {
		trigger = { always = yes }
		localization_key = "116:controller.ideology_index"
	}
}
defined_text = { ##Returns number of days it takes to upgrade market
	name = market_upgrade_days
	text = {
		trigger = { controller = { has_country_flag = reduce_market_time } }
		localization_key = "75"
	}
	text = {
		localization_key = "100"
	}
}

defined_text = { ##displays the current modifiers from the market
	name = market_current_level_modifiers_scripted_loc
	text = {
		trigger = { check_variable = { non_damaged_building_level@market = 1 } }
		localization_key = market_level_1_modifiers
	}
	text = {
		trigger = { check_variable = { non_damaged_building_level@market = 2 } }
		localization_key = market_level_2_modifiers
	}
	text = {
		trigger = { check_variable = { non_damaged_building_level@market = 3 } }
		localization_key = market_level_3_modifiers
	}
	text = {
		trigger = { check_variable = { non_damaged_building_level@market = 4 } }
		localization_key = market_level_4_modifiers
	}
	text = {
		trigger = { check_variable = { non_damaged_building_level@market = 5 } }
		localization_key = market_level_5_modifiers
	}
}

defined_text = { ##Displays effects of recruiting riverstalkers with correct cost (DLC dependent)
	name = create_rivers_unit_scripted
	text = { #AAT
		trigger = {
			has_dlc = "Arms Against Tyranny"
		}
		localization_key = create_rivers_unit_AAT
	}
	text = {
		localization_key = empty_loc_key
	}
}
defined_text = { ##Displays effects of recruiting free riverstalkers with correct cost (DLC dependent)
	name = create_free_rivers_unit_scripted
	text = { #AAT
		trigger = {
			has_dlc = "Arms Against Tyranny"
		}
		localization_key = create_free_rivers_unit_AAT
	}
	text = {
		localization_key = empty_loc_key
	}
}
defined_text = { ##Displays effects of recruiting mountains infantry with correct cost (DLC dependent)
	name = create_mountains_unit_scripted
	text = { #AAT
		trigger = {
			has_dlc = "Arms Against Tyranny"
		}
		localization_key = create_mountains_unit_AAT
	}
	text = {
		localization_key = empty_loc_key
	}
}
defined_text = { ##Displays effects of recruiting dragons cavalry with correct cost (DLC dependent)
	name = create_dragons_cavalry_scripted
	text = { #AAT
		trigger = {
			has_dlc = "Arms Against Tyranny"
		}
		localization_key = create_dragons_unit_AAT
	}
	text = {
		localization_key = empty_loc_key
	}
}
defined_text = { ##Displays effects of recruiting company of winter unit with correct cost (DLC dependent)
	name = create_winters_unit_scripted
	text = { #AAT
		trigger = {
			has_dlc = "Arms Against Tyranny"
		}
		localization_key = create_winters_unit_AAT
	}
	text = {
		localization_key = empty_loc_key
	}
}

defined_text = { ##Displays DLC variant for how DOR will seek santuary in Dale
	name = DOR_seek_santuary_in_dale_scripted_loc
	text = { #MTG
		trigger = {
			has_dlc = "Man the Guns"
		}
		localization_key = DOR_seek_santuary_in_dale_tooltip_MTG
	}
	text = { #vanilla
		localization_key = DOR_seek_santuary_in_dale_tooltip_vanilla
	}
}

