calculate_all_wine_production = { #call in FOR
	clear_array = global.exporter_array
	clear_array = global.exporter_ideology_array
	clear_array = global.exporter_exported_array
	clear_array = global.exporter_available_array
	every_state = { #state wine production
		limit = { check_variable = { modifier@wine_gain > 0 } }
		set_temp_variable = { wine_production = modifier@wine_gain }
		controller = {
			set_temp_variable = { wine_factor = PREV.modifier@wine_gain_factor }
			add_to_temp_variable = { wine_factor = modifier@wine_gain_factor }
			multiply_temp_variable = { PREV:wine_production = wine_factor }
			add_to_variable = { wine_produced = PREV:wine_production }
		}
	}
	every_country = { #add wine to stockpile/market
		limit = { #only compute for those actually gaining wine
			OR = {
				check_variable = { modifier@wine_gain_allowed > 0 }
				check_variable = { modifier@national_wine_gain > 0 }
				check_variable = { wine_imported > 0 }
			}
		}
		calculate_national_wine_production = yes
	}
}

calculate_national_wine_production = { #call in tag
	##compute export
	if = { #only export if you actually have a market to export from
		limit = { capital_scope = { market > 0 } }
		set_variable = { wine_export = wine_produced }
		multiply_variable = { wine_export = modifier@min_export }
		subtract_from_variable = { wine_produced = wine_export }
		set_variable = { wine_export_available = wine_export } #how much is still available for sale
		subtract_from_variable = { wine_export_available = wine_exported }
		##add to exporter list
		if = {
			limit = { check_variable = { wine_export > 0 } }
			add_to_array = { value = THIS array = global.exporter_array }
			add_to_array = { value = ideology_index array = global.exporter_ideology_array }
			add_to_array = { value = wine_export array = global.exporter_exported_array }
			add_to_array = { value = wine_export_available array = global.exporter_available_array }
		}
	}
	##compute off-map/import gain, which is not exported
	set_variable = { national_wine = modifier@national_wine_gain }
	multiply_variable = { national_wine = modifier@wine_gain_factor }
	add_to_variable = { wine_produced = national_wine }
	add_to_variable = { wine_produced = wine_imported }
	set_variable = { wine_production_SHOWCASE = wine_produced } #for tooltips
	##gain production
	add_equipment_to_stockpile = {
		type = wine_equipment_0
		amount = var:wine_produced
	}
	set_variable = { wine_available = wine_produced }
	set_variable = { wine_produced = 0 } #reset for tomorrow
}

daily_prosperity_gain = { #call in a state to gain it prosperity
	#base gain from trade
	set_variable = { passthroughGain = num_passthrough_routes }
	set_variable = { importGain = num_import_routes }
	set_variable = { exportGain = num_export_routes }
	multiply_variable = { passthroughGain = global.prosperity_per_passthrough }
	multiply_variable = { importGain = global.prosperity_per_import }
	multiply_variable = { exportGain = global.prosperity_per_export }
	set_variable = { base_prosperity_gain = passthroughGain }
	add_to_variable = { base_prosperity_gain = importGain }
	add_to_variable = { base_prosperity_gain = exportGain }
	log = "[THIS.GetName] P:[?passthroughGain] I:[?importGain] E:[?exportGain]"
	
	#multiply by factors
	set_temp_variable = { factor = modifier@prosperity_gain_factor }
	add_to_temp_variable = { factor = controller.modifier@prosperity_gain_factor }
	add_to_temp_variable = { factor = 1 } #so it's not 0
	set_variable = { total_prosperity_gain = base_prosperity_gain }
	multiply_variable = { total_prosperity_gain = factor }
	
	##actually add the damn stuff
	add_to_variable = { prosperity = total_prosperity_gain }
	clamp_temp_variable = {
		var = prosperity
		min = 0
		max = 100
	}
}

set_ideology_index = { #call in a tag
	if = { limit = { has_government = isolationism }
		set_variable = { ideology_index = 1 }
	}
	else_if = { limit = { has_government = freedom }
		set_variable = { ideology_index = 2 }
	}
	else_if = { limit = { has_government = opportunism }
		set_variable = { ideology_index = 3 }
	}
	else_if = { limit = { has_government = conquest }
		set_variable = { ideology_index = 4 }
	}
	else = {
		set_variable = { ideology_index = 5 }
	}
}