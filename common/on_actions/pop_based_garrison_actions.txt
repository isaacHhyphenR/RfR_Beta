@basePopulationAssumptionK = 1000 #assume 1,000,000 population as average
on_actions = { ##calculates on startup
	on_startup = {
		effect = {
			if = { limit = { has_game_rule = { rule = population_based_garrison_requirements option = PBGR } }
				every_state = {
					set_variable = { PBGR_pop_factor = state_population_k }
					divide_variable = { PBGR_pop_factor = @basePopulationAssumptionK }
					subtract_from_variable = { PBGR_pop_factor = 1 } #since modifiers add to the base, we would want a state double population to have a PBGR_pop_factor of 1, not of 2
					add_dynamic_modifier = { modifier = state_based_population_garrison_requirement }
				}
			}
			else_if = { limit = { has_game_rule = { rule = population_based_garrison_requirements option = PBGR_VISIBLE } }
				every_state = {
					set_variable = { PBGR_pop_factor = state_population_k }
					divide_variable = { PBGR_pop_factor = @basePopulationAssumptionK }
					subtract_from_variable = { PBGR_pop_factor = 1 } #since modifiers add to the base, we would want a state double population to have a PBGR_pop_factor of 1, not of 2
					add_dynamic_modifier = { modifier = state_based_population_garrison_requirement_visible }
				}
			}
		}
	}
	on_monthly = { #recalculates every month; mostly here in case you have mods that add/subtract large amount of population from states, since natural pop increases shouldn't matter on this scale
		effect = {
			if = { limit = { OR = { has_game_rule = { rule = population_based_garrison_requirements option = PBGR } has_game_rule = { rule = population_based_garrison_requirements option = PBGR_VISIBLE } } }
				every_state = {
					set_variable = { PBGR_pop_factor = state_population_k }
					divide_variable = { PBGR_pop_factor = @basePopulationAssumptionK }
					subtract_from_variable = { PBGR_pop_factor = 1 } #since modifiers add to the base, we would want a state double population to have a PBGR_pop_factor of 1, not of 2
				}
			}
		}
	}
}